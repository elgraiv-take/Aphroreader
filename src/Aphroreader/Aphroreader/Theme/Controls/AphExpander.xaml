<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:Elgraiv.Aphroreader.Theme.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Aphroreader;component/Theme/AphroreaderColor.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="Border"
            Margin="2"
            Background="#00000000"
            BorderThickness="0">
            <Grid>
                <fa:ImageAwesome
                    x:Name="CollapsedArrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Icon="AngleDoubleLeft">
                    <fa:ImageAwesome.Foreground>
                        <SolidColorBrush Color="{DynamicResource AphForegroundColor}" />
                    </fa:ImageAwesome.Foreground>
                </fa:ImageAwesome>
                <fa:ImageAwesome
                    Name="ExpandededArrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Icon="AngleDoubleRight"
                    Visibility="Collapsed">
                    <fa:ImageAwesome.Foreground>
                        <SolidColorBrush Color="{DynamicResource AphForegroundColor}" />
                    </fa:ImageAwesome.Foreground>
                </fa:ImageAwesome>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="ExpandededArrow"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="{DynamicResource AphForcucedBorderColor}"
                                Duration="0:0:0.1" />
                            <ColorAnimation
                                Storyboard.TargetName="CollapsedArrow"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="{DynamicResource AphForcucedBorderColor}"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard />
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>


    <Style TargetType="{x:Type Expander}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="Border"
                            Grid.Row="0"
                            Background="{DynamicResource AphBackgroundLightBrush}"
                            CornerRadius="8">
                            <Grid>
                                <ToggleButton
                                    Width="Auto"
                                    Height="Auto"
                                    VerticalAlignment="Stretch"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource ExpanderToggleButton}" />
                            </Grid>
                        </Border>
                        <Border
                            x:Name="Content"
                            Grid.Column="1"
                            Background="{DynamicResource AphBackgroundLightBrush}"
                            CornerRadius="0,8,8,0"
                            Visibility="Collapsed">
                            <ContentPresenter Margin="0" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="8,0,0,8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>